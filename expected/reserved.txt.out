TOKEN: T_LPAREN    LEXEME: (
TOKEN: T_MULT      LEXEME: *
TOKEN: T_RPAREN    LEXEME: )
TOKEN: T_PLUS      LEXEME: +
TOKEN: T_COMMA     LEXEME: ,
TOKEN: T_MINUS     LEXEME: -
TOKEN: T_DOTDOT    LEXEME: ..
TOKEN: T_DOT       LEXEME: .
TOKEN: T_COLON     LEXEME: :
TOKEN: T_ASSIGN    LEXEME: :=
TOKEN: T_SCOLON    LEXEME: ;
TOKEN: T_LT        LEXEME: <
TOKEN: T_LE        LEXEME: <=
TOKEN: T_NE        LEXEME: <>
TOKEN: T_EQ        LEXEME: =
TOKEN: T_GT        LEXEME: >
TOKEN: T_GE        LEXEME: >=
TOKEN: T_LBRACK    LEXEME: [
TOKEN: T_RBRACK    LEXEME: ]
TOKEN: T_AND       LEXEME: and
TOKEN: T_ARRAY     LEXEME: array
TOKEN: T_BEGIN     LEXEME: begin
TOKEN: T_BOOL      LEXEME: boolean
TOKEN: T_CHAR      LEXEME: char
TOKEN: T_DIV       LEXEME: div
TOKEN: T_DO        LEXEME: do
TOKEN: T_ELSE      LEXEME: else
TOKEN: T_END       LEXEME: end
TOKEN: T_FALSE     LEXEME: false
TOKEN: T_IF        LEXEME: if
TOKEN: T_INT       LEXEME: integer
TOKEN: T_NOT       LEXEME: not
TOKEN: T_OF        LEXEME: of
TOKEN: T_OR        LEXEME: or
TOKEN: T_PROC      LEXEME: procedure
TOKEN: T_PROG      LEXEME: program
TOKEN: T_READ      LEXEME: read
TOKEN: T_THEN      LEXEME: then
TOKEN: T_TRUE      LEXEME: true
TOKEN: T_VAR       LEXEME: var
TOKEN: T_WHILE     LEXEME: while
TOKEN: T_WRITE     LEXEME: write
